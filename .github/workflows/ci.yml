name: CI

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  check:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p ci -- --check

  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Set up Go
        uses: actions/setup-go@v4 # v4 uses caching of Go out of the box
        with:
          go-version: '1.20'
      - name: Install nats-server
        run: go install github.com/nats-io/nats-server/v2@main
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install gsudo
        run: PowerShell -Command "Set-ExecutionPolicy RemoteSigned -scope Process; [Net.ServicePointManager]::SecurityProtocol = 'Tls12'; iwr -useb https://raw.githubusercontent.com/gerardog/gsudo/master/installgsudo.ps1 | iex"
        if: matrix.os == 'windows-latest'
      - name: Refresh Env
        run: RefreshEnv
        if: matrix.os == 'windows-latest'
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p ci -- --test
        if: matrix.os != 'windows-latest'
      - name: Windows Test
        run: gsudo cargo run -p ci -- --test
        if: matrix.os == 'windows-latest'

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p ci -- --format

  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p ci -- --clippy